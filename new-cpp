#!/bin/sh

################################
# The script configuration part# 
################################
declare cmake_version="3.21.0"
declare project_name=$1
declare lib_name="$1-lib"

declare cmake_file="CMakeLists.txt"


##################################
# declaretion of helper functions#
##################################

# git init function
function init_git () {
    printf "# $1" >> README.md
    git init
    printf "build" >> .gitignore
}


# cmake helper functions 
function generating_cmake_test_lib () {
    cd tests

    printf "add_executable (unit-tests main.cpp)\n"         >> $cmake_file 
    printf "target_link_libraries (unit-tests pthread)\n"   >> $cmake_file 
    printf "target_link_libraries (unit-tests gtest)\n"     >> $cmake_file 
    printf "target_link_libraries (unit-tests $lib_name)\n" >> $cmake_file 

    printf "#include <gtest/gtest.h>\n\n"     >> main.cpp
    printf "TEST (test, test) {\n"            >> main.cpp
    printf "\tASSERT_EQ(1, 1);\n}\n\n"        >> main.cpp
    printf "int main () {\n"                  >> main.cpp
    printf "\ttesting::InitGoogleTest();\n"   >> main.cpp
    printf "\treturn RUN_ALL_TESTS();\n}\n"   >> main.cpp
    
    cd ..
}

function generating_cmake_proj_lib () {
    cd $lib_name && mkdir src 
    cd src && mkdir $lib_name 
    printf "#include <iostream>\n void hello() {\n\tstd::cout << \"Hello, World\"<<std::endl;\n}" >> $lib_name/hello.cpp
    cd ..
    printf "add_library ($lib_name src/$lib_name/hello.cpp)\n" >> $cmake_file
    printf "target_include_directories ($lib_name PUBLIC \"\${CMAKE_CURRENT_SOURCE_DIR}/src\")" >> $cmake_file
    cd ..
}

function generating_cmake_file () {
    printf "cmake_minimum_required(VERSION $cmake_version)\n" >> $cmake_file 
    printf "project ($project_name)\n"    >> $cmake_file 
    printf "add_subdirectory ($lib_name)\n"     >> $cmake_file 
    printf "add_subdirectory (tests)\n"   >> $cmake_file 
}

#########################
# entriy point of script#
#########################
function main () {
    # creating project folders
    mkdir $project_name && cd $project_name 
    mkdir $lib_name && mkdir tests

    # generating cmake files
    generating_cmake_file
    generating_cmake_proj_lib
    generating_cmake_test_lib
    printf "" >> src/$cmake_file

    # init git
    init_git
}

#calling entriy porint function
main
